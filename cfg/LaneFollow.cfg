#!/usr/bin/env python

# remember to run the collofing command to make this script executable
# chmod a+x cfg/script_name.py

# Name of containing package
PACKAGE = 'birds_eye'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Numeric values using sliders
# General syntax is:
#   gen.add('var_name', type, 0, 'var_name', default, low, high)
gen.add('white_all_ratio',  double_t,   0, 'white_all_ratio',   0.5, 0.0, 1.0)
gen.add('thresh_value',     int_t,      0, 'thresh_value',      180, 0,   255)
gen.add('max_value',        int_t,      0, 'max_value',         255, 0,   255)

gen.add('mask_l_hue',       double_t,   0, 'mask_l_hue',         45, 0, 255)
gen.add('mask_h_hue',       double_t,   0, 'mask_h_hue',         45, 0, 255)
gen.add('mask_l_sat',       double_t,   0, 'mask_l_sat',         45, 0, 255)
gen.add('mask_h_sat',       double_t,   0, 'mask_h_sat',         45, 0, 255)
gen.add('mask_l_lum',       double_t,   0, 'mask_l_lum',         45, 0, 255)
gen.add('mask_h_lum',       double_t,   0, 'mask_h_lum',         45, 0, 255)

gen.add('mask_dialate',     double_t,   0, 'mask_dialate',      0,  0, 20)

gen.add('fixed_center',     double_t,   0, 'fixed_center',      0.5,  0, 1)

gen.add('gamma',    double_t,   0, 'gamma',     90,  0, 180)
gen.add('alpha',    double_t,   0, 'alpha',     90,  0, 180) # 30
gen.add('beta',     double_t,   0, 'beta',      90,  0, 180)
gen.add('dist',     double_t,   0, 'dist',      500, 0, 2000)
gen.add('f',        double_t,   0, 'f',         500, 0, 2000)
gen.add('grid_res', double_t,   0, 'grid_res',  0.01, 0, 0.2)
gen.add('grid_origin_x', double_t,   0, 'grid_origin_x',  0, -10, 10)
gen.add('grid_origin_y', double_t,   0, 'grid_origin_y',  0, -10, 10)
gen.add('scan_offset_deg', int_t,   0, 'scan_offset_deg',  0, 0, 360)
gen.add('scan_offset_x', double_t,   0, 'scan_offset_x',  0, -1, 1)
gen.add('scan_offset_y', double_t,   0, 'scan_offset_y',  0, -1, 1)
gen.add('scan_scale_shift', double_t,   0, 'scan_scale_shift', 1.0, 0.01, 10.0)

# Checkbox using boolean value
# General syntax is:
#   gen.add('var_namne', bool_t, 0, 'var_name', default)
gen.add('use_median_blur',  bool_t,     0, 'use_median_blur',   True)
gen.add('median_blur_amount',      int_t,      0, 'median_blur_amount',       3,   0,   10)

# gen.generate(PACKAGE, 'package_name', 'PascalCaseNodeName')
exit(gen.generate(PACKAGE, 'birds_eye', 'LaneFollow'))
